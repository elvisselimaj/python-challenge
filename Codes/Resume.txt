# -*- coding: UTF-8 -*-
"""Resume Analysis Module."""

import os
import string

# Counter is used later in the program
from collections import Counter



# Files to load and output (Remember to change these)
file_to_load = os.path.join("raw_data", "employee_data.csv")
file_to_output = os.path.join("analysis", "employee_data_reformatted.csv")
# Paths
#resume_path = open("../Resources"/resume.md")

resume_path = os.path.join("Resources", "resume.md")
#print(resume_path)

# Skills to match
REQUIRED_SKILLS = {"excel", "python", "mysql", "statistics"}
DESIRED_SKILLS = {"r", "git", "html", "css", "leaflet"}

#with open(file_to_load) as emp_data:
 #   reader = csv.reader(emp_data)
# function to load a file
def load_file(resume_path):
    """Helper function to read a file and return the data."""
    with open(resume_path) as resume_file_handler:
        resume_contents = resume_file_handler.read()
        resume_contents = resume_contents.lower()
        resume_tokens = resume_contents.split()
    return resume_tokens

# Grab the text for a Resume
word_list = load_file(resume_path)
#print(word_list)

# Create a set of unique words from the resume
resume = set()

# Remove trailing punctuation from words
for token in word_list:
    resume.add(token.split(',')[0].split('.')[0])

# Remove Punctuation that were read as whole words
punctuation = set(string.punctuation)
resume = resume - punctuation
print(resume)

# Calculate the Required Skills Match using Set Intersection
print("REQUIRED SKILLS")
print("=============")
print(resume & REQUIRED_SKILLS)


# Calculate the Desired Skills Match using Set Intersection
print("DESIRED SKILLS")
print("=============")
print(resume & DESIRED_SKILLS)

# Resume Word Count
# ==========================
# Initialize a dictionary with default values equal to zero
word_count = {}.fromkeys(word_list, 0)
#print(word_count)

# Loop through the word list and count each word.
for word in word_list:
    word_count[word] += 1
#print(word_count)

# Using collections.Counter
word_counter = Counter(word_list)
#print(word_counter)

# Comparing both word count solutions
print(word_count == word_counter)

# Top 10 Words
print("Top 10 Words")
print("=============")
print(word_count)
print(word_counter)

# Don't worry about the underscore in front of _word_count
# It is just convention for internal use only
# More info here: https://dbader.org/blog/meaning-of-underscores-in-python

# Clean Punctuation
_word_count = []
# Hint: return only words that are not in string.punctuaton
# Hint: consider using a list comprehension

# Clean Stop Words
stop_words = ["and", "with", "using", "##", "working", "in", "to"]
type(resume)
resume = [resume]
resume = resume - stop_words
_word_count = []

# Sort words by count and print the top 10
sorted_words = []
for word in sorted(word_count, key=word_count.get, reverse=True)[:10]:
    print(f"Token: {word:20} Count: {word_count[word]}")

# what needs work the resume data needs the stop words 
# removed before the count of the 10 most used words.

# problem with the different types of set vs. list and set not being mutable.

